{"ast":null,"code":"var _jsxFileName = \"/Users/abhi/Desktop/Tinder clone/tinder-clone/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport TinderCard from '../components/TinderCard';\nimport { useEffect, useState } from 'react';\nimport ChatContainer from '../components/ChatContainer';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _user$matches;\n  const [user, setUser] = useState(null);\n  const [genderedUsers, setGenderedUsers] = useState([]);\n  const [lastDirection, setLastDirection] = useState();\n  const [cookies] = useCookies(['user']);\n  const userId = cookies === null || cookies === void 0 ? void 0 : cookies.UserId;\n  const getUser = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/user', {\n        params: {\n          userId\n        }\n      });\n      setUser(response.data);\n    } catch (error) {\n      console.log('Error fetching user:', error);\n    }\n  };\n  const getGenderedUsers = async () => {\n    if (!(user !== null && user !== void 0 && user.gender_interest)) return;\n    try {\n      const response = await axios.get('http://localhost:8000/gendered-users', {\n        params: {\n          gender: user.gender_interest\n        }\n      });\n      setGenderedUsers(response.data);\n    } catch (error) {\n      console.log('Error fetching gendered users:', error);\n    }\n  };\n  useEffect(() => {\n    if (userId) {\n      getUser();\n    }\n  }, [userId]);\n  useEffect(() => {\n    if (user) {\n      getGenderedUsers();\n    }\n  }, [user]);\n  console.log('Fetched user:', user);\n  console.log('Fetched gendered users:', genderedUsers);\n  const updateMatches = async matchedUserId => {\n    try {\n      await axios.put('http://localhost:8000/addmatch', {\n        userId,\n        matchedUserId\n      });\n      getUser(); // Refresh user data after match\n    } catch (error) {\n      console.log('Error updating matches:', error);\n    }\n  };\n  const swiped = (direction, swipedUserId) => {\n    if (direction === 'right') {\n      updateMatches(swipedUserId);\n    }\n    setLastDirection(direction);\n  };\n  const outOfFrame = name => {\n    console.log(`${name} left the screen!`);\n  };\n  const matchedUserIds = (user === null || user === void 0 ? void 0 : (_user$matches = user.matches) === null || _user$matches === void 0 ? void 0 : _user$matches.map(match => match.user_id)) || [];\n  const filteredGenderedUsers = genderedUsers.filter(genderedUser => !matchedUserIds.includes(genderedUser.user_id) && genderedUser.user_id !== userId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(ChatContainer, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swipe-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-container\",\n          children: [filteredGenderedUsers.map(genderedUser => /*#__PURE__*/_jsxDEV(TinderCard, {\n            className: \"swipe\",\n            onSwipe: dir => swiped(dir, genderedUser.user_id),\n            onCardLeftScreen: () => outOfFrame(genderedUser.first_name),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              style: {\n                backgroundImage: `url(${genderedUser.url || 'https://via.placeholder.com/300'})`\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: genderedUser.first_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this)\n          }, genderedUser.user_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"swipe-info\",\n            children: lastDirection && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"You swiped \", lastDirection]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Dashboard, \"aUYStTRDdGY+9BKOg0nAEQ0Ku/U=\", false, function () {\n  return [useCookies];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["TinderCard","useEffect","useState","ChatContainer","useCookies","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","_user$matches","user","setUser","genderedUsers","setGenderedUsers","lastDirection","setLastDirection","cookies","userId","UserId","getUser","response","get","params","data","error","console","log","getGenderedUsers","gender_interest","gender","updateMatches","matchedUserId","put","swiped","direction","swipedUserId","outOfFrame","name","matchedUserIds","matches","map","match","user_id","filteredGenderedUsers","filter","genderedUser","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSwipe","dir","onCardLeftScreen","first_name","style","backgroundImage","url","_c","$RefreshReg$"],"sources":["/Users/abhi/Desktop/Tinder clone/tinder-clone/client/src/pages/Dashboard.js"],"sourcesContent":["import TinderCard from '../components/TinderCard';\nimport { useEffect, useState } from 'react';\nimport ChatContainer from '../components/ChatContainer';\nimport { useCookies } from 'react-cookie';\nimport axios from 'axios';\n\nconst Dashboard = () => {\n    const [user, setUser] = useState(null);\n    const [genderedUsers, setGenderedUsers] = useState([]);\n    const [lastDirection, setLastDirection] = useState();\n    const [cookies] = useCookies(['user']);\n\n    const userId = cookies?.UserId;\n\n    const getUser = async () => {\n        try {\n            const response = await axios.get('http://localhost:8000/user', {\n                params: { userId },\n            });\n            setUser(response.data);\n        } catch (error) {\n            console.log('Error fetching user:', error);\n        }\n    };\n\n    const getGenderedUsers = async () => {\n        if (!user?.gender_interest) return;\n        try {\n            const response = await axios.get('http://localhost:8000/gendered-users', {\n                params: { gender: user.gender_interest },\n            });\n            setGenderedUsers(response.data);\n        } catch (error) {\n            console.log('Error fetching gendered users:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (userId) {\n            getUser();\n        }\n    }, [userId]);\n\n    useEffect(() => {\n        if (user) {\n            getGenderedUsers();\n        }\n    }, [user]);\n    console.log('Fetched user:', user);\n    console.log('Fetched gendered users:', genderedUsers);\n\n    const updateMatches = async (matchedUserId) => {\n        try {\n            await axios.put('http://localhost:8000/addmatch', {\n                userId,\n                matchedUserId,\n            });\n            getUser(); // Refresh user data after match\n        } catch (error) {\n            console.log('Error updating matches:', error);\n        }\n    };\n\n    const swiped = (direction, swipedUserId) => {\n        if (direction === 'right') {\n            updateMatches(swipedUserId);\n        }\n        setLastDirection(direction);\n    };\n\n    const outOfFrame = (name) => {\n        console.log(`${name} left the screen!`);\n    };\n\n    const matchedUserIds = user?.matches?.map((match) => match.user_id) || [];\n    const filteredGenderedUsers = genderedUsers.filter(\n        (genderedUser) => !matchedUserIds.includes(genderedUser.user_id) && genderedUser.user_id !== userId\n    );\n\n    return (\n        <>\n            {user && (\n                <div className=\"dashboard\">\n                    <ChatContainer user={user} />\n                    <div className=\"swipe-container\">\n                        <div className=\"card-container\">\n                            {filteredGenderedUsers.map((genderedUser) => (\n                                <TinderCard\n                                    className=\"swipe\"\n                                    key={genderedUser.user_id}\n                                    onSwipe={(dir) => swiped(dir, genderedUser.user_id)}\n                                    onCardLeftScreen={() => outOfFrame(genderedUser.first_name)}\n                                >\n                                    <div\n                                        className=\"card\"\n                                        style={{\n                                            backgroundImage: `url(${genderedUser.url || 'https://via.placeholder.com/300'})`,\n                                        }}\n                                    >\n                                        <h3>{genderedUser.first_name}</h3>\n                                    </div>\n                                </TinderCard>\n                            ))}\n                            <div className=\"swipe-info\">\n                                {lastDirection && <p>You swiped {lastDirection}</p>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,aAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EACpD,MAAM,CAACiB,OAAO,CAAC,GAAGf,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;EAEtC,MAAMgB,MAAM,GAAGD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,MAAM;EAE9B,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,4BAA4B,EAAE;QAC3DC,MAAM,EAAE;UAAEL;QAAO;MACrB,CAAC,CAAC;MACFN,OAAO,CAACS,QAAQ,CAACG,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,EAACjB,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEkB,eAAe,GAAE;IAC5B,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,sCAAsC,EAAE;QACrEC,MAAM,EAAE;UAAEO,MAAM,EAAEnB,IAAI,CAACkB;QAAgB;MAC3C,CAAC,CAAC;MACFf,gBAAgB,CAACO,QAAQ,CAACG,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,KAAK,CAAC;IACxD;EACJ,CAAC;EAED1B,SAAS,CAAC,MAAM;IACZ,IAAImB,MAAM,EAAE;MACRE,OAAO,CAAC,CAAC;IACb;EACJ,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZnB,SAAS,CAAC,MAAM;IACZ,IAAIY,IAAI,EAAE;MACNiB,gBAAgB,CAAC,CAAC;IACtB;EACJ,CAAC,EAAE,CAACjB,IAAI,CAAC,CAAC;EACVe,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEhB,IAAI,CAAC;EAClCe,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEd,aAAa,CAAC;EAErD,MAAMkB,aAAa,GAAG,MAAOC,aAAa,IAAK;IAC3C,IAAI;MACA,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,gCAAgC,EAAE;QAC9Cf,MAAM;QACNc;MACJ,CAAC,CAAC;MACFZ,OAAO,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,MAAMS,MAAM,GAAGA,CAACC,SAAS,EAAEC,YAAY,KAAK;IACxC,IAAID,SAAS,KAAK,OAAO,EAAE;MACvBJ,aAAa,CAACK,YAAY,CAAC;IAC/B;IACApB,gBAAgB,CAACmB,SAAS,CAAC;EAC/B,CAAC;EAED,MAAME,UAAU,GAAIC,IAAI,IAAK;IACzBZ,OAAO,CAACC,GAAG,CAAC,GAAGW,IAAI,mBAAmB,CAAC;EAC3C,CAAC;EAED,MAAMC,cAAc,GAAG,CAAA5B,IAAI,aAAJA,IAAI,wBAAAD,aAAA,GAAJC,IAAI,CAAE6B,OAAO,cAAA9B,aAAA,uBAAbA,aAAA,CAAe+B,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC,KAAI,EAAE;EACzE,MAAMC,qBAAqB,GAAG/B,aAAa,CAACgC,MAAM,CAC7CC,YAAY,IAAK,CAACP,cAAc,CAACQ,QAAQ,CAACD,YAAY,CAACH,OAAO,CAAC,IAAIG,YAAY,CAACH,OAAO,KAAKzB,MACjG,CAAC;EAED,oBACIb,OAAA,CAAAE,SAAA;IAAAyC,QAAA,EACKrC,IAAI,iBACDN,OAAA;MAAK4C,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtB3C,OAAA,CAACJ,aAAa;QAACU,IAAI,EAAEA;MAAK;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7BhD,OAAA;QAAK4C,SAAS,EAAC,iBAAiB;QAAAD,QAAA,eAC5B3C,OAAA;UAAK4C,SAAS,EAAC,gBAAgB;UAAAD,QAAA,GAC1BJ,qBAAqB,CAACH,GAAG,CAAEK,YAAY,iBACpCzC,OAAA,CAACP,UAAU;YACPmD,SAAS,EAAC,OAAO;YAEjBK,OAAO,EAAGC,GAAG,IAAKrB,MAAM,CAACqB,GAAG,EAAET,YAAY,CAACH,OAAO,CAAE;YACpDa,gBAAgB,EAAEA,CAAA,KAAMnB,UAAU,CAACS,YAAY,CAACW,UAAU,CAAE;YAAAT,QAAA,eAE5D3C,OAAA;cACI4C,SAAS,EAAC,MAAM;cAChBS,KAAK,EAAE;gBACHC,eAAe,EAAE,OAAOb,YAAY,CAACc,GAAG,IAAI,iCAAiC;cACjF,CAAE;cAAAZ,QAAA,eAEF3C,OAAA;gBAAA2C,QAAA,EAAKF,YAAY,CAACW;cAAU;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC;UAAC,GAXDP,YAAY,CAACH,OAAO;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYjB,CACf,CAAC,eACFhD,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,EACtBjC,aAAa,iBAAIV,OAAA;cAAA2C,QAAA,GAAG,aAAW,EAACjC,aAAa;YAAA;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EACR,gBACH,CAAC;AAEX,CAAC;AAAC5C,EAAA,CA1GID,SAAS;EAAA,QAION,UAAU;AAAA;AAAA2D,EAAA,GAJ1BrD,SAAS;AA4Gf,eAAeA,SAAS;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}